<?php

require_once __DIR__ . '/../bootstrap/app.php';

use App\Models\User;

require_once __DIR__ . '/../vendor/autoload.php';
require_once __DIR__ . '/../config/constants.php';
require_once __DIR__ . '/../helpers/helper.php';

echo "=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–î–ï–õ–ò USER ===\n\n";

// 1. –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
echo "1. –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n";
$users = new User()->all();
foreach ($users as $user) {
    echo "   - {$user['name']} ({$user['email']})\n";
}

echo "\n";

// 2. –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
echo "2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID = 1:\n";
$user = new User()->find(1);
if ($user) {
    echo "   –ò–º—è: {$user['name']}\n";
    echo "   Email: {$user['email']}\n";
} else {
    echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω\n";
}

echo "\n";

// 3. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "3. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n";
$newUser = new User()->create([
    'name' => 'Test User',
    'email' => 'test@example.com',
    'password' => password_hash('testpass', PASSWORD_DEFAULT),
    'active' => 1
]);

if ($newUser) {
    echo "   ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {$newUser['name']} (ID: {$newUser['id']})\n";
} else {
    echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è\n";
}

echo "\n";

// 4. –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n";
$updatedUser = new User()->update($newUser['id'], [
    'name' => 'Updated Test User',
    'active' => 0
]);

if ($updatedUser) {
    echo "   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {$updatedUser['name']}\n";
} else {
    echo "   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\n";
}

echo "\n";

// 5. –ü–æ–∏—Å–∫ –ø–æ email
echo "5. –ü–æ–∏—Å–∫ –ø–æ email 'jane@example.com':\n";
$userByEmail = new User()->findByEmail('jane@example.com');
if ($userByEmail) {
    echo "   ‚úÖ –ù–∞–π–¥–µ–Ω: {$userByEmail['name']}\n";
} else {
    echo "   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω\n";
}

echo "\n";

// 6. –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
echo "6. –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n";
$activeUsers = new User()->active()->get();
foreach ($activeUsers as $user) {
    echo "   - {$user['name']} (–∞–∫—Ç–∏–≤–µ–Ω)\n";
}

echo "\n";

// 7. –°–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å
echo "7. –°–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å (–∞–∫—Ç–∏–≤–Ω—ã–µ, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞):\n";
$complexQuery = new User()
    ->active()
    ->orderBy('created_at', 'DESC')
    ->limit(5)
    ->get();

foreach ($complexQuery as $user) {
    echo "   - {$user['name']} (—Å–æ–∑–¥–∞–Ω: {$user['created_at']})\n";
}

echo <<<EOF
\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n
EOF;
